{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSort","type","setState","handleReverse","prev","handleReset","currentGoods","goods","visibleGoods","LENGTH","sort","a","b","length","ALPHABET","localeCompare","Error","reverse","getReorderedGoods","this","className","onClick","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEJ,SAAUG,KAP9B,EAUEE,cAAgB,WACd,EAAKD,UAAS,SAACE,GAAD,MAAW,CAAEP,YAAaO,EAAKP,gBAXjD,EAcEQ,YAAc,WACZ,EAAKH,SAAS,CACZL,YAAY,EACZC,SAAUL,EAASM,QAjBzB,4CAqBE,WAAU,IAAD,OACDO,EArDH,SACLC,EADK,GAGJ,IADCT,EACF,EADEA,SAAUD,EACZ,EADYA,WAERW,EAAY,YAAOD,GAEvB,OAAQT,GACN,KAAKL,EAASgB,OACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UACzC,MACF,KAAKpB,EAASqB,SACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,cAAcH,MAC5C,MACF,KAAKnB,EAASM,KACZS,EAAY,YAAOD,GACnB,MACF,QAAS,MAAM,IAAIS,MAAM,qBAO3B,OAJInB,GACFW,EAAaS,UAGRT,EA8BgBU,CAAkBxB,EAAiByB,KAAKvB,OAC7D,EAAiCuB,KAAKvB,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WAElB,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEnB,KAAK,SACLmB,UAAS,sCACPtB,IAAaL,EAASqB,SAAW,GAAK,YACxCO,QAAS,kBAAM,EAAKrB,WAAWP,EAASqB,WAJ1C,iCASA,wBACEb,KAAK,SACLmB,UAAS,yCACPtB,IAAaL,EAASgB,OAAS,GAAK,YACtCY,QAAS,kBAAM,EAAKrB,WAAWP,EAASgB,SAJ1C,4BASA,wBACER,KAAK,SACLmB,UAAS,yCACPvB,EAAa,GAAK,YACpBwB,QAASF,KAAKhB,cAJhB,sBASEN,GAAcC,IAAaL,EAASM,OACpC,wBACEE,KAAK,SACLmB,UAAU,4BACVC,QAASF,KAAKd,YAHhB,sBAUJ,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eApEpC,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eab51d3c.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.NONE:\n      visibleGoods = [...goods];\n      break;\n    default: throw new Error('Invalid sort type');\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSort = (type: SortType) => {\n    this.setState({ sortType: type });\n  };\n\n  handleReverse = () => {\n    this.setState((prev) => ({ isReversed: !prev.isReversed }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const currentGoods = getReorderedGoods(goodsFromServer, this.state);\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info\n            ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success\n            ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning\n            ${isReversed ? '' : 'is-light'}`}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {currentGoods.map(item => (\n            <li data-cy=\"Good\" key={item}>{item}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}